# Default values for webserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
images:
  frontendUrl: "mcr.microsoft.com/azurecleanroom/cleanroom-spark-frontend:3.0.0"
  ccrproxyUrl: "mcr.microsoft.com/azurecleanroom/ccr-proxy:3.0.0"
  ccrattestationUrl: "mcr.microsoft.com/azurecleanroom/ccr-attestation:3.0.0"
  otelCollectorUrl: "mcr.microsoft.com/azurecleanroom/otel-collector:3.0.0"
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent

ccrattestation:
  enabled: true

telemetry:
  telemetryCollectionEnabled: false
  prometheusEnabled: false
  lokiEnabled: false
  tempoEnabled: false
  prometheusEndpoint: ""
  lokiEndpoint: ""
  tempoEndpoint: ""

env:
  insecureVirtualEnv: false

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 443
  labels: {}

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe: {}
#   httpGet:
#     path: /ready
#     port: 8000
#   failureThreshold: 3
#   periodSeconds: 60
# startupProbe:
#   httpGet:
#     path: /ready
#     port: 8000
#   failureThreshold: 60
#   periodSeconds: 10
# readinessProbe:
#   httpGet:
#     path: /ready
#     port: 8000
#   failureThreshold: 3
#   periodSeconds: 60

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

settings:
  service:
    name: ""
    namespace: ""
  cleanroom:
    registryUrl: ""
    sidecarsPolicyDocumentRegistryUrl: ""
    versionsDocument: ""
    useHttp: false
  spark:
    computeProvider: "confidential-virtual-node"
    sparkVersion: "3.5.5"
  applications:
    analytics:
      namespace: analytics
      allowAll: False
      debugMode: False
      sql:
        driver:
          cores: 1
          memory: "512m"
          serviceAccount: "spark-operator-spark"
        executor:
          cores: 1
          memory: "512m"
          instances: 3