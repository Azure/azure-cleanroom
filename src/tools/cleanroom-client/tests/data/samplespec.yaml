applicationEndpoints: []
applications:
- command:
  - bash
  - -c
  - echo $CODE | base64 -d > main.go; go run main.go
  datasinks:
    consumer-output: /mnt/remote/output
  datasources:
    publisher-input: /mnt/remote/input
  environmentVariables:
    CODE: cGFja2FnZSBtYWluCgppbXBvcnQgKAogICAiY29tcHJlc3MvZ3ppcCIKICAgImZtdCIKICAgImlvIgogICAib3MiCiAgICJ0aW1lIgopCgpmdW5jIHdhaXRGb3JTaGFyZVRvQmVSZWFkeShmaWxlUGF0aCBzdHJpbmcpIHsKCiAgIG1heENvdW50ZXIgOj0gMzAwCiAgIGZvciB0cnVlIHsKICAgICAgaWYgXywgZXJyIDo9IG9zLlN0YXQoZmlsZVBhdGgpOyBlcnIgPT0gbmlsIHsKICAgICAgICAgZm10LlByaW50bG4oIkZpbGUgaXMgcHJlc2VudCBhdDoiLCBmaWxlUGF0aCkKICAgICAgICAgYnJlYWsKICAgICAgfSAgZWxzZSBpZiBvcy5Jc05vdEV4aXN0KGVycikgewogICAgICAgICAgICBmbXQuUHJpbnRsbigiRmlsZSBpcyBub3QgeWV0IHByZXNlbnQgYXQ6IiwgZmlsZVBhdGgpCiAgICAgICAgICAgIGlmIG1heENvdW50ZXIgPD0gMCB7CiAgICAgICAgICAgICAgIGZtdC5QcmludGxuKCJUaW1lb3V0IHdhaXRpbmcgZm9yIGZpbGUgYXQ6IiwgZmlsZVBhdGgpCiAgICAgICAgICAgICAgIHBhbmljKGVycikKICAgICAgICAgICAgfQogICAgICAgICAgICBtYXhDb3VudGVyLS0KICAgICAgICAgICAgdGltZS5TbGVlcCgyICogdGltZS5TZWNvbmQpCiAgICAgIH0KICAgfQp9CgpmdW5jIG1haW4oKSB7CgogICBpbnB1dExvY2F0aW9uIDo9IG9zLkdldGVudigiSU5QVVRfTE9DQVRJT04iKQogICBmaWxlUGF0aCA6PSBpbnB1dExvY2F0aW9uICsgIi9pbnB1dC50eHQiCgogICB3YWl0Rm9yU2hhcmVUb0JlUmVhZHkoZmlsZVBhdGgpCgogICBmbXQuUHJpbnRsbigiT3BlbmluZyB0aGUgaW5wdXQgZmlsZS4iKQogICBpbnB1dEZpbGUsIGVyciA6PSBvcy5PcGVuKGZpbGVQYXRoKQogICBpZiBlcnIgIT0gbmlsIHsKICAgICAgcGFuaWMoZXJyKQogICB9CiAgIGRlZmVyIGlucHV0RmlsZS5DbG9zZSgpCgogICBmbXQuUHJpbnRsbigiQ3JlYXRpbmcgdGhlIG91dHB1dCBmaWxlLiIpCiAgIG91dHB1dExvY2F0aW9uIDo9IG9zLkdldGVudigiT1VUUFVUX0xPQ0FUSU9OIikKICAgb3V0cHV0RmlsZSwgZXJyIDo9IG9zLkNyZWF0ZShvdXRwdXRMb2NhdGlvbiArICIvb3V0cHV0Lmd6IikKICAgaWYgZXJyICE9IG5pbCB7CiAgICAgIHBhbmljKGVycikKICAgfQogICBkZWZlciBvdXRwdXRGaWxlLkNsb3NlKCkKCiAgIGd6aXBXcml0ZXIgOj0gZ3ppcC5OZXdXcml0ZXIob3V0cHV0RmlsZSkKICAgZGVmZXIgZ3ppcFdyaXRlci5DbG9zZSgpCgogICBmbXQuUHJpbnRsbigiQ29tcHJlc3NpbmcgdGhlIGZpbGUuIikKICAgXywgZXJyID0gaW8uQ29weShnemlwV3JpdGVyLCBpbnB1dEZpbGUpCiAgIGlmIGVyciAhPSBuaWwgewogICAgICBwYW5pYyhlcnIpCiAgIH0KCiAgIGZtdC5QcmludGxuKCJGaWxlIGNvbXByZXNzZWQgc3VjY2Vzc2Z1bGx5LiIpCn0=
    INPUT_LOCATION: /mnt/remote/input
    OUTPUT_LOCATION: /mnt/remote/output
  image:
    enforcementPolicy:
      policy:
        policyDocument: '{''trustType'': ''https''}'
    executable:
      authenticityReceipt: ''
      backingResource:
        id: docker.io/golang@sha256:f43c6f049f04cbbaeb28f0aad3eea15274a7d0a7899a617d0037aec48d7ab010
        name: demo-app
        provider:
          configuration: ''
          protocol: AzureContainerRegistry
          url: docker.io
        type: AzureContainerRegistry
      documentType: OCI
      identity: null
    protection: null
  name: demo-app
  runtimeSettings:
    ports: []
    resource:
      requests:
        cpu: 2.0
        memoryInGB: 4
  startType: Auto
datasinks:
- identity:
    clientId: a68023a5-b59d-4ef7-8d36-99b78e67221e
    name: consumer-identity
    tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
    tokenIssuer:
      federatedIdentity:
        clientId: ''
        name: cleanroom_cgs_oidc
        tenantId: ''
        tokenIssuer:
          issuer:
            configuration: ''
            protocol: Attested_OIDC
            url: https://cgs/oidc
          issuerType: AttestationBasedTokenIssuer
      issuer:
        configuration: ''
        protocol: AzureAD_Federated
        url: https://AzureAD
      issuerType: FederatedIdentityBasedTokenIssuer
  name: consumer-output
  path: ''
  protection:
    configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
    encryptionSecretAccessIdentity:
      clientId: a68023a5-b59d-4ef7-8d36-99b78e67221e
      name: consumer-identity
      tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
      tokenIssuer:
        federatedIdentity:
          clientId: ''
          name: cleanroom_cgs_oidc
          tenantId: ''
          tokenIssuer:
            issuer:
              configuration: ''
              protocol: Attested_OIDC
              url: https://cgs/oidc
            issuerType: AttestationBasedTokenIssuer
        issuer:
          configuration: ''
          protocol: AzureAD_Federated
          url: https://AzureAD
        issuerType: FederatedIdentityBasedTokenIssuer
    encryptionSecrets:
      dek:
        name: wrapped-consumer-output-dek-8c1115dc-kek
        secret:
          backingResource:
            id: consumer-dek-store
            name: wrapped-consumer-output-dek-8c1115dc-kek
            provider:
              configuration: ''
              protocol: AzureKeyVault_Secret
              url: https://xwievggjrflfrkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
      kek:
        name: 8c1115dc-kek
        secret:
          backingResource:
            id: consumer-kek-store
            name: 8c1115dc-kek
            provider:
              configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
              protocol: AzureKeyVault_SecureKey
              url: https://xwievggjrflfrkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
    privacyPolicy: null
    proxyMode: Secure
    proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
  store:
    id: consumer-output
    name: b79f39a9d5ba4a558efdb4e8d474b743
    provider:
      configuration: ''
      protocol: Azure_BlobStorage
      url: https://xwievggjrflfrsa.blob.core.windows.net/
    type: Azure_BlobStorage
  type: Volume_ReadWrite
- identity:
    clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
    name: publisher-identity
    tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
    tokenIssuer:
      federatedIdentity:
        clientId: ''
        name: cleanroom_cgs_oidc
        tenantId: ''
        tokenIssuer:
          issuer:
            configuration: ''
            protocol: Attested_OIDC
            url: https://cgs/oidc
          issuerType: AttestationBasedTokenIssuer
      issuer:
        configuration: ''
        protocol: AzureAD_Federated
        url: https://AzureAD
      issuerType: FederatedIdentityBasedTokenIssuer
  name: application-telemetry
  path: ''
  protection:
    configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
    encryptionSecretAccessIdentity:
      clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
      name: publisher-identity
      tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
      tokenIssuer:
        federatedIdentity:
          clientId: ''
          name: cleanroom_cgs_oidc
          tenantId: ''
          tokenIssuer:
            issuer:
              configuration: ''
              protocol: Attested_OIDC
              url: https://cgs/oidc
            issuerType: AttestationBasedTokenIssuer
        issuer:
          configuration: ''
          protocol: AzureAD_Federated
          url: https://AzureAD
        issuerType: FederatedIdentityBasedTokenIssuer
    encryptionSecrets:
      dek:
        name: wrapped-application-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
        secret:
          backingResource:
            id: publisher-dek-store
            name: wrapped-application-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
            provider:
              configuration: ''
              protocol: AzureKeyVault_Secret
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
      kek:
        name: 4fcea030-kek
        secret:
          backingResource:
            id: publisher-kek-store
            name: 4fcea030-kek
            provider:
              configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
              protocol: AzureKeyVault_SecureKey
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
    privacyPolicy: null
    proxyMode: Secure
    proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
  store:
    id: application-telemetry-4fcea030-publisherconfig
    name: application-telemetry-a1c5d8cac0d94cb49d1d423fdae8df10
    provider:
      configuration: ''
      protocol: Azure_BlobStorage
      url: https://iabrpkaeqjctfsa.blob.core.windows.net/
    type: Azure_BlobStorage
  type: Volume_ReadWrite
- identity:
    clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
    name: publisher-identity
    tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
    tokenIssuer:
      federatedIdentity:
        clientId: ''
        name: cleanroom_cgs_oidc
        tenantId: ''
        tokenIssuer:
          issuer:
            configuration: ''
            protocol: Attested_OIDC
            url: https://cgs/oidc
          issuerType: AttestationBasedTokenIssuer
      issuer:
        configuration: ''
        protocol: AzureAD_Federated
        url: https://AzureAD
      issuerType: FederatedIdentityBasedTokenIssuer
  name: infrastructure-telemetry
  path: ''
  protection:
    configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
    encryptionSecretAccessIdentity:
      clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
      name: publisher-identity
      tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
      tokenIssuer:
        federatedIdentity:
          clientId: ''
          name: cleanroom_cgs_oidc
          tenantId: ''
          tokenIssuer:
            issuer:
              configuration: ''
              protocol: Attested_OIDC
              url: https://cgs/oidc
            issuerType: AttestationBasedTokenIssuer
        issuer:
          configuration: ''
          protocol: AzureAD_Federated
          url: https://AzureAD
        issuerType: FederatedIdentityBasedTokenIssuer
    encryptionSecrets:
      dek:
        name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
        secret:
          backingResource:
            id: publisher-dek-store
            name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
            provider:
              configuration: ''
              protocol: AzureKeyVault_Secret
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
      kek:
        name: 4fcea030-kek
        secret:
          backingResource:
            id: publisher-kek-store
            name: 4fcea030-kek
            provider:
              configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
              protocol: AzureKeyVault_SecureKey
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
    privacyPolicy: null
    proxyMode: Secure
    proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
  store:
    id: infrastructure-telemetry-4fcea030-publisherconfig
    name: infrastructure-telemetry-51d5e7b3da1b4e149f6828c9460676af
    provider:
      configuration: ''
      protocol: Azure_BlobStorage
      url: https://iabrpkaeqjctfsa.blob.core.windows.net/
    type: Azure_BlobStorage
  type: Volume_ReadWrite
datasources:
- identity:
    clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
    name: publisher-identity
    tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
    tokenIssuer:
      federatedIdentity:
        clientId: ''
        name: cleanroom_cgs_oidc
        tenantId: ''
        tokenIssuer:
          issuer:
            configuration: ''
            protocol: Attested_OIDC
            url: https://cgs/oidc
          issuerType: AttestationBasedTokenIssuer
      issuer:
        configuration: ''
        protocol: AzureAD_Federated
        url: https://AzureAD
      issuerType: FederatedIdentityBasedTokenIssuer
  name: publisher-input
  path: ''
  protection:
    configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
    encryptionSecretAccessIdentity:
      clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
      name: publisher-identity
      tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
      tokenIssuer:
        federatedIdentity:
          clientId: ''
          name: cleanroom_cgs_oidc
          tenantId: ''
          tokenIssuer:
            issuer:
              configuration: ''
              protocol: Attested_OIDC
              url: https://cgs/oidc
            issuerType: AttestationBasedTokenIssuer
        issuer:
          configuration: ''
          protocol: AzureAD_Federated
          url: https://AzureAD
        issuerType: FederatedIdentityBasedTokenIssuer
    encryptionSecrets:
      dek:
        name: wrapped-publisher-input-dek-4fcea030-kek
        secret:
          backingResource:
            id: publisher-dek-store
            name: wrapped-publisher-input-dek-4fcea030-kek
            provider:
              configuration: ''
              protocol: AzureKeyVault_Secret
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
      kek:
        name: 4fcea030-kek
        secret:
          backingResource:
            id: publisher-kek-store
            name: 4fcea030-kek
            provider:
              configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
              protocol: AzureKeyVault_SecureKey
              url: https://iabrpkaeqjctfkv.vault.azure.net/
            type: AzureKeyVault
          secretType: Key
    privacyPolicy: null
    proxyMode: Secure
    proxyType: SecureVolume__ReadOnly__Azure__BlobStorage
  store:
    id: publisher-input
    name: publisher-input
    provider:
      configuration: ''
      protocol: Azure_BlobStorage
      url: https://iabrpkaeqjctfsa.blob.core.windows.net/
    type: Azure_BlobStorage
  type: Volume_ReadOnly
governance:
  audit: null
  consent: null
  telemetry:
    application:
      consent: null
      logs:
        identity:
          clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
          name: publisher-identity
          tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
          tokenIssuer:
            federatedIdentity:
              clientId: ''
              name: cleanroom_cgs_oidc
              tenantId: ''
              tokenIssuer:
                issuer:
                  configuration: ''
                  protocol: Attested_OIDC
                  url: https://cgs/oidc
                issuerType: AttestationBasedTokenIssuer
            issuer:
              configuration: ''
              protocol: AzureAD_Federated
              url: https://AzureAD
            issuerType: FederatedIdentityBasedTokenIssuer
        name: application-telemetry
        path: ''
        protection:
          configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
          encryptionSecretAccessIdentity:
            clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
            name: publisher-identity
            tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
            tokenIssuer:
              federatedIdentity:
                clientId: ''
                name: cleanroom_cgs_oidc
                tenantId: ''
                tokenIssuer:
                  issuer:
                    configuration: ''
                    protocol: Attested_OIDC
                    url: https://cgs/oidc
                  issuerType: AttestationBasedTokenIssuer
              issuer:
                configuration: ''
                protocol: AzureAD_Federated
                url: https://AzureAD
              issuerType: FederatedIdentityBasedTokenIssuer
          encryptionSecrets:
            dek:
              name: wrapped-application-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
              secret:
                backingResource:
                  id: publisher-dek-store
                  name: wrapped-application-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
                  provider:
                    configuration: ''
                    protocol: AzureKeyVault_Secret
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
            kek:
              name: 4fcea030-kek
              secret:
                backingResource:
                  id: publisher-kek-store
                  name: 4fcea030-kek
                  provider:
                    configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
                    protocol: AzureKeyVault_SecureKey
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
          privacyPolicy: null
          proxyMode: Secure
          proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
        store:
          id: application-telemetry-4fcea030-publisherconfig
          name: application-telemetry-a1c5d8cac0d94cb49d1d423fdae8df10
          provider:
            configuration: ''
            protocol: Azure_BlobStorage
            url: https://iabrpkaeqjctfsa.blob.core.windows.net/
          type: Azure_BlobStorage
        type: Volume_ReadWrite
    infrastructure:
      consent: null
      logs:
        identity:
          clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
          name: publisher-identity
          tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
          tokenIssuer:
            federatedIdentity:
              clientId: ''
              name: cleanroom_cgs_oidc
              tenantId: ''
              tokenIssuer:
                issuer:
                  configuration: ''
                  protocol: Attested_OIDC
                  url: https://cgs/oidc
                issuerType: AttestationBasedTokenIssuer
            issuer:
              configuration: ''
              protocol: AzureAD_Federated
              url: https://AzureAD
            issuerType: FederatedIdentityBasedTokenIssuer
        name: infrastructure-telemetry
        path: ''
        protection:
          configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
          encryptionSecretAccessIdentity:
            clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
            name: publisher-identity
            tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
            tokenIssuer:
              federatedIdentity:
                clientId: ''
                name: cleanroom_cgs_oidc
                tenantId: ''
                tokenIssuer:
                  issuer:
                    configuration: ''
                    protocol: Attested_OIDC
                    url: https://cgs/oidc
                  issuerType: AttestationBasedTokenIssuer
              issuer:
                configuration: ''
                protocol: AzureAD_Federated
                url: https://AzureAD
              issuerType: FederatedIdentityBasedTokenIssuer
          encryptionSecrets:
            dek:
              name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
              secret:
                backingResource:
                  id: publisher-dek-store
                  name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
                  provider:
                    configuration: ''
                    protocol: AzureKeyVault_Secret
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
            kek:
              name: 4fcea030-kek
              secret:
                backingResource:
                  id: publisher-kek-store
                  name: 4fcea030-kek
                  provider:
                    configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
                    protocol: AzureKeyVault_SecureKey
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
          privacyPolicy: null
          proxyMode: Secure
          proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
        store:
          id: infrastructure-telemetry-4fcea030-publisherconfig
          name: infrastructure-telemetry-51d5e7b3da1b4e149f6828c9460676af
          provider:
            configuration: ''
            protocol: Azure_BlobStorage
            url: https://iabrpkaeqjctfsa.blob.core.windows.net/
          type: Azure_BlobStorage
        type: Volume_ReadWrite
      metrics:
        identity:
          clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
          name: publisher-identity
          tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
          tokenIssuer:
            federatedIdentity:
              clientId: ''
              name: cleanroom_cgs_oidc
              tenantId: ''
              tokenIssuer:
                issuer:
                  configuration: ''
                  protocol: Attested_OIDC
                  url: https://cgs/oidc
                issuerType: AttestationBasedTokenIssuer
            issuer:
              configuration: ''
              protocol: AzureAD_Federated
              url: https://AzureAD
            issuerType: FederatedIdentityBasedTokenIssuer
        name: infrastructure-telemetry
        path: ''
        protection:
          configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
          encryptionSecretAccessIdentity:
            clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
            name: publisher-identity
            tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
            tokenIssuer:
              federatedIdentity:
                clientId: ''
                name: cleanroom_cgs_oidc
                tenantId: ''
                tokenIssuer:
                  issuer:
                    configuration: ''
                    protocol: Attested_OIDC
                    url: https://cgs/oidc
                  issuerType: AttestationBasedTokenIssuer
              issuer:
                configuration: ''
                protocol: AzureAD_Federated
                url: https://AzureAD
              issuerType: FederatedIdentityBasedTokenIssuer
          encryptionSecrets:
            dek:
              name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
              secret:
                backingResource:
                  id: publisher-dek-store
                  name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
                  provider:
                    configuration: ''
                    protocol: AzureKeyVault_Secret
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
            kek:
              name: 4fcea030-kek
              secret:
                backingResource:
                  id: publisher-kek-store
                  name: 4fcea030-kek
                  provider:
                    configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
                    protocol: AzureKeyVault_SecureKey
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
          privacyPolicy: null
          proxyMode: Secure
          proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
        store:
          id: infrastructure-telemetry-4fcea030-publisherconfig
          name: infrastructure-telemetry-51d5e7b3da1b4e149f6828c9460676af
          provider:
            configuration: ''
            protocol: Azure_BlobStorage
            url: https://iabrpkaeqjctfsa.blob.core.windows.net/
          type: Azure_BlobStorage
        type: Volume_ReadWrite
      traces:
        identity:
          clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
          name: publisher-identity
          tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
          tokenIssuer:
            federatedIdentity:
              clientId: ''
              name: cleanroom_cgs_oidc
              tenantId: ''
              tokenIssuer:
                issuer:
                  configuration: ''
                  protocol: Attested_OIDC
                  url: https://cgs/oidc
                issuerType: AttestationBasedTokenIssuer
            issuer:
              configuration: ''
              protocol: AzureAD_Federated
              url: https://AzureAD
            issuerType: FederatedIdentityBasedTokenIssuer
        name: infrastructure-telemetry
        path: ''
        protection:
          configuration: '{''KeyType'': ''KEK'', ''EncryptionMode'': ''CPK''}'
          encryptionSecretAccessIdentity:
            clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
            name: publisher-identity
            tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
            tokenIssuer:
              federatedIdentity:
                clientId: ''
                name: cleanroom_cgs_oidc
                tenantId: ''
                tokenIssuer:
                  issuer:
                    configuration: ''
                    protocol: Attested_OIDC
                    url: https://cgs/oidc
                  issuerType: AttestationBasedTokenIssuer
              issuer:
                configuration: ''
                protocol: AzureAD_Federated
                url: https://AzureAD
              issuerType: FederatedIdentityBasedTokenIssuer
          encryptionSecrets:
            dek:
              name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
              secret:
                backingResource:
                  id: publisher-dek-store
                  name: wrapped-infrastructure-telemetry-4fcea030-publisherconfig-dek-4fcea030-kek
                  provider:
                    configuration: ''
                    protocol: AzureKeyVault_Secret
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
            kek:
              name: 4fcea030-kek
              secret:
                backingResource:
                  id: publisher-kek-store
                  name: 4fcea030-kek
                  provider:
                    configuration: '{''authority'': ''https://sharedneu.neu.attest.azure.net''}'
                    protocol: AzureKeyVault_SecureKey
                    url: https://iabrpkaeqjctfkv.vault.azure.net/
                  type: AzureKeyVault
                secretType: Key
          privacyPolicy: null
          proxyMode: Secure
          proxyType: SecureVolume__ReadWrite__Azure__BlobStorage
        store:
          id: infrastructure-telemetry-4fcea030-publisherconfig
          name: infrastructure-telemetry-51d5e7b3da1b4e149f6828c9460676af
          provider:
            configuration: ''
            protocol: Azure_BlobStorage
            url: https://iabrpkaeqjctfsa.blob.core.windows.net/
          type: Azure_BlobStorage
        type: Volume_ReadWrite
identities:
- clientId: ''
  name: cleanroom_cgs_oidc
  tenantId: ''
  tokenIssuer:
    issuer:
      configuration: ''
      protocol: Attested_OIDC
      url: https://cgs/oidc
    issuerType: AttestationBasedTokenIssuer
- clientId: a68023a5-b59d-4ef7-8d36-99b78e67221e
  name: consumer-identity
  tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
  tokenIssuer:
    federatedIdentity:
      clientId: ''
      name: cleanroom_cgs_oidc
      tenantId: ''
      tokenIssuer:
        issuer:
          configuration: ''
          protocol: Attested_OIDC
          url: https://cgs/oidc
        issuerType: AttestationBasedTokenIssuer
    issuer:
      configuration: ''
      protocol: AzureAD_Federated
      url: https://AzureAD
    issuerType: FederatedIdentityBasedTokenIssuer
- clientId: f19eae0e-eeb6-4414-9fd8-e3c9955e5c52
  name: publisher-identity
  tenantId: 72f988bf-86f1-41af-91ab-2d7cd011db47
  tokenIssuer:
    federatedIdentity:
      clientId: ''
      name: cleanroom_cgs_oidc
      tenantId: ''
      tokenIssuer:
        issuer:
          configuration: ''
          protocol: Attested_OIDC
          url: https://cgs/oidc
        issuerType: AttestationBasedTokenIssuer
    issuer:
      configuration: ''
      protocol: AzureAD_Federated
      url: https://AzureAD
    issuerType: FederatedIdentityBasedTokenIssuer
sandbox: null
