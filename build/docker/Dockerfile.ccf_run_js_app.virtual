ARG CCF_VERSION=6.0.6

# Build the clean room specific C++ module that gets loaded in CCF.
FROM mcr.microsoft.com/azurelinux/base/core:3.0 AS builder
RUN tdnf install -y wget ca-certificates clang-tools-extra-devel
ARG CCF_VERSION
RUN wget https://github.com/microsoft/CCF/releases/download/ccf-${CCF_VERSION}/ccf_virtual_devel_${CCF_VERSION}_x86_64.rpm -O ccf_virtual_devel.rpm
RUN tdnf install --exclude=aznfs -y ccf_virtual_devel.rpm

# Copy the source.
COPY /src/governance/ccf-app/cpp src/cpp
COPY .clang-format .clang-format
COPY /scripts scripts

# Check for formatting before compilation.
RUN chmod +x /scripts/*.sh
RUN /scripts/ci-checks.sh

# Build the binary.
RUN cd src/cpp
RUN mkdir build && cd build
WORKDIR /src/cpp/build
RUN CC="clang-18" CXX="clang++-18" cmake -GNinja -DCOMPILE_TARGET=virtual ..
RUN ninja

# Sandbox
FROM mcr.microsoft.com/azurelinux/base/core:3.0 AS sandbox
RUN tdnf install -y wget ca-certificates tar
ARG CCF_VERSION
RUN wget https://github.com/microsoft/CCF/releases/download/ccf-${CCF_VERSION}/ccf_virtual_${CCF_VERSION}_x86_64.rpm -O ccf_virtual.rpm
# --exclude=aznfs workaround per https://github.com/microsoft/azurelinux/issues/13971#issuecomment-2955395439.
RUN tdnf install --exclude=aznfs  -y ccf_virtual.rpm
RUN cp /opt/ccf_virtual/bin/cchost /usr/bin/cchost
RUN chmod +rx /usr/bin/cchost

COPY --from=builder /src/cpp/build/libjs_cleanroom.virtual.so /usr/lib/ccf/libjs_cleanroom.virtual.so
COPY --from=builder /opt/ccf_virtual/bin/*.js /app/
COPY --from=builder /opt/ccf_virtual/bin/keygenerator.sh /app/ 
COPY ./src/governance/ccf-app/js/config/cchost_config_virtual_js.json /app/

WORKDIR /app/

EXPOSE 8080/tcp

CMD ["/usr/bin/cchost", "--config", "/app/cchost_config_virtual_js.json"]

# Run
FROM mcr.microsoft.com/azurelinux/base/core:3.0
RUN tdnf install -y wget ca-certificates tar
ARG CCF_VERSION
RUN wget https://github.com/microsoft/CCF/releases/download/ccf-${CCF_VERSION}/ccf_virtual_${CCF_VERSION}_x86_64.rpm -O ccf_virtual.rpm
RUN tdnf install --exclude=aznfs -y ccf_virtual.rpm
RUN cp /opt/ccf_virtual/bin/cchost /usr/bin/cchost
RUN chmod +rx /usr/bin/cchost

COPY --from=builder /src/cpp/build/libjs_cleanroom.virtual.so /usr/lib/ccf/libjs_cleanroom.virtual.so

COPY --chmod=755 /src/ccf/ccf-provider-common/scripts/node/bootstrap.sh /app/

WORKDIR /app/

EXPOSE 8080/tcp

CMD ["/bin/bash", "/app/bootstrap.sh"]
