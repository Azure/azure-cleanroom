name: Run Test
description: Run test
inputs:
  id:
    description: "Unique Identifier for this run"
    required: true
  test-name:
    description: "Test to run"
    required: true
  container-spec-path:
    description: Path to the container spec that needs to be used for this test
    required: true
  test-container-name:
    description: The test container name
    required: true
  dotnet-test-filter:
    description: The .NET test filter expression
    required: false
  test-configuration-file:
    description: The configuration file for the tests.
    required: false


runs:
  using: composite
  steps:
  - name: Get default security policy
    shell: bash
    id: get-policy
    run: echo security-policy="cGFja2FnZSBwb2xpY3kKCmFwaV9zdm4gOj0gIjAuMTAuMCIKCm1vdW50X2RldmljZSA6PSB7ImFsbG93ZWQiOiB0cnVlfQptb3VudF9vdmVybGF5IDo9IHsiYWxsb3dlZCI6IHRydWV9CmNyZWF0ZV9jb250YWluZXIgOj0geyJhbGxvd2VkIjogdHJ1ZSwgImVudl9saXN0IjogbnVsbCwgImFsbG93X3N0ZGlvX2FjY2VzcyI6IHRydWV9CnVubW91bnRfZGV2aWNlIDo9IHsiYWxsb3dlZCI6IHRydWV9IAp1bm1vdW50X292ZXJsYXkgOj0geyJhbGxvd2VkIjogdHJ1ZX0KZXhlY19pbl9jb250YWluZXIgOj0geyJhbGxvd2VkIjogdHJ1ZSwgImVudl9saXN0IjogbnVsbH0KZXhlY19leHRlcm5hbCA6PSB7ImFsbG93ZWQiOiB0cnVlLCAiZW52X2xpc3QiOiBudWxsLCAiYWxsb3dfc3RkaW9fYWNjZXNzIjogdHJ1ZX0Kc2h1dGRvd25fY29udGFpbmVyIDo9IHsiYWxsb3dlZCI6IHRydWV9CnNpZ25hbF9jb250YWluZXJfcHJvY2VzcyA6PSB7ImFsbG93ZWQiOiB0cnVlfQpwbGFuOV9tb3VudCA6PSB7ImFsbG93ZWQiOiB0cnVlfQpwbGFuOV91bm1vdW50IDo9IHsiYWxsb3dlZCI6IHRydWV9CmdldF9wcm9wZXJ0aWVzIDo9IHsiYWxsb3dlZCI6IHRydWV9CmR1bXBfc3RhY2tzIDo9IHsiYWxsb3dlZCI6IHRydWV9CnJ1bnRpbWVfbG9nZ2luZyA6PSB7ImFsbG93ZWQiOiB0cnVlfQpsb2FkX2ZyYWdtZW50IDo9IHsiYWxsb3dlZCI6IHRydWV9CnNjcmF0Y2hfbW91bnQgOj0geyJhbGxvd2VkIjogdHJ1ZX0Kc2NyYXRjaF91bm1vdW50IDo9IHsiYWxsb3dlZCI6IHRydWV9Cg==" >> $GITHUB_OUTPUT

  - name: Generate ARM Template
    shell: bash
    id: generate-arm-template
    env:
      ACR_URL: ${{ env.ACR_URL }}
      ACR_USERNAME: ${{ env.ACR_USERNAME }}
      ACR_PASSWORD: ${{ env.ACR_PASSWORD }}
      SECURITY_POLICY: ${{ steps.get-policy.outputs.security-policy }}
      WORKFLOW_ID: ${{ inputs.test-name }}-${{ inputs.id }}
      DOTNET_TEST_FILTER: ${{ inputs.dotnet-test-filter }}
      STORAGE_ACCOUNT_NAME: ${{ env.STORAGE_ACCOUNT_NAME }}
      TEST_RESULTS_CONTAINER_NAME: ${{ env.TEST_RESULTS_CONTAINER_NAME }}
      TEST_CONFIGURATION_FILE: ${{ inputs.test-configuration-file }}
      TEST_NAME: ${{ inputs.test-name }}
      WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
      RUN_ID: ${{ github.run_id }}
    run: |
      python infra/aci/generate_arm_template.py --container-spec-path ${{ inputs.container-spec-path }} \
      --user-assigned-identity-id ${{ env.USER_ASSIGNED_IDENTITY }} \
      --image-tag ${{ inputs.id }} > arm_template.json

  - name: Login to Azure
    uses: azure/login@v2
    with:
      client-id: ${{ env.AZURE_CLIENT_ID }}
      tenant-id: ${{ env.AZURE_TENANT_ID }}
      subscription-id: ${{ env.AZURE_SUBSCRIPTION_ID }}

  - name: Deploy ARM template
    shell: bash
    id: deploy-arm-template
    run: |
      az deployment group create --resource-group ${{ env.ACI_RESOURCE_GROUP }} --template-file "arm_template.json" --parameters containerGroupName=${{ inputs.test-name }}-${{ inputs.id }} -n ${{ inputs.test-name}}-${{ inputs.id }} --verbose

  - name: Wait for test completion
    shell: bash
    run: timeout 1800s pwsh test/wait-for-tests.ps1 -resource-group ${{ env.ACI_RESOURCE_GROUP }} -aci-name ${{ inputs.test-name }}-${{ inputs.id }} -container-name ${{ inputs.test-container-name }}

  - name: Dump test logs
    if: always()
    shell: bash
    run: az container logs --name ${{ inputs.test-name }}-${{ inputs.id }} --resource-group ${{ env.ACI_RESOURCE_GROUP }} --container-name ${{ inputs.test-container-name }}

  - name: Fetch trx file
    shell: bash
    run: az storage blob download --account-name ${{ env.STORAGE_ACCOUNT_NAME }} --container-name ${{ env.TEST_RESULTS_CONTAINER_NAME }} --name TestRunResult${{ inputs.test-name }}-${{ inputs.id }}.trx --file TestRunResult${{ inputs.test-name }}-${{ inputs.id }}.trx --auth-mode login

  - name: Test report
    uses: dorny/test-reporter@v1
    with:
      name: Test report-${{ inputs.test-name }}  # Name of the check run which will be created
      path: TestRunResult${{ inputs.test-name }}-${{ inputs.id }}.trx    # Path to test results
      reporter: dotnet-trx 

  - name: Remove Container on ACI
    shell: bash
    continue-on-error: true
    run: |
      az container delete --name ${{ inputs.test-name }}-${{ inputs.id }} --resource-group ${{ env.ACI_RESOURCE_GROUP }} --yes

  - name: Delete test result blob
    shell: bash
    continue-on-error: true
    run: az storage blob delete --account-name ${{ env.STORAGE_ACCOUNT_NAME }} --container-name ${{ env.TEST_RESULTS_CONTAINER_NAME }} --name TestRunResult${{ inputs.test-name }}-${{ inputs.id }}.trx --auth-mode login