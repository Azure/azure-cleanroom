name: "PR Validation: Build"

on:
  workflow_call:

permissions:
  contents: read  # This is required for actions/checkout
  checks: write   # This is required to generate the test report
  id-token: write # This is required for generating OIDC access token

# # When a new revision is pushed to a PR, cancel all in-progress CI runs for that
# # PR. See https://docs.github.com/en/actions/using-jobs/using-concurrency
# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

jobs:
  build-ccf-containers:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [ccf-provider-client, ccf-recovery-agent, ccf-recovery-service, ccf-consortium-manager, ccf-runjs-app-virtual, ccf-runjs-app-snp, ccf-runjs-app-sandbox, ccr-proxy, ccr-attestation, skr, cgs-client, cgs-ui, cgs-ccf-artefacts]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Add docker user
        shell: bash
        run: sudo usermod -aG docker $USER

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build ccf containers
        run: pwsh ./build/ccf/build-ccf-infra-containers.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push -containers ${{ matrix.container }}

  build-ccr-containers:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [blobfuse-launcher, s3fs-launcher, ccr-attestation, ccr-governance, ccr-governance-virtual, ccr-init, ccr-secrets, ccr-proxy, ccr-proxy-ext-processor, ccr-client-proxy, code-launcher, identity, otel-collector, local-skr, skr, ccr-governance-opa-policy]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Add docker user
        shell: bash
        run: sudo usermod -aG docker $USER

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build clean room containers
        run: pwsh ./build/onebox/build-local-cleanroom-containers.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -containers ${{ matrix.container }}

  build-ccf-container-policies:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [ccf-network, ccf-recovery-service, ccf-consortium-manager]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    needs: [build-ccf-containers]
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - shell: pwsh
        run: Install-Module -Name powershell-yaml -RequiredVersion 0.4.7 -Force

      - name: Install confcom extension
        shell: pwsh
        run: |
          az extension add --name confcom -y --allow-preview true
          az version

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build ${{ matrix.container }} policy
        run: pwsh ./build/ccf/build-ccf-infra-containers-policy.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push -containers ${{ matrix.container }}

  build-ccr-container-policies:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    needs: [build-ccr-containers]
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - shell: pwsh
        run: Install-Module -Name powershell-yaml -RequiredVersion 0.4.7 -Force

      - name: Install confcom extension
        shell: pwsh
        run: |
          az extension add --name confcom -y --allow-preview true
          az version

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build ccr containers policy
        run: pwsh ./build/build-ccr-digests.ps1 -repo ${{ vars.ACR_URL }} -tag ${{ github.run_id }} -push

  build-cleanroom-cluster-containers:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [cleanroom-cluster-provider-client]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - shell: pwsh
        run: Install-Module -Name powershell-yaml -RequiredVersion 0.4.7 -Force

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build ${{ matrix.container }}
        run: pwsh ./build/cleanroom-cluster/build-cleanroom-cluster-infra-containers.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push -containers ${{ matrix.container }}

  build-workload-containers:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [cleanroom-spark-analytics-agent, cleanroom-spark-frontend, cleanroom-spark-analytics-app, ccr-proxy, ccr-governance, ccr-governance-virtual, ccr-attestation, skr, local-skr, otel-collector]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - shell: pwsh
        run: Install-Module -Name powershell-yaml -RequiredVersion 0.4.7 -Force

      - name: Add docker user
        shell: bash
        run: sudo usermod -aG docker $USER

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build workload containers
        run: pwsh ./build/workloads/build-workload-infra-containers.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push -containers ${{ matrix.container }}

  build-workload-container-policies:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    strategy:
      matrix:
        container: [cleanroom-spark-analytics-agent, cleanroom-spark-frontend, cleanroom-spark-analytics-app]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    needs: [build-workload-containers, build-ccr-containers]
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - shell: pwsh
        run: Install-Module -Name powershell-yaml -RequiredVersion 0.4.7 -Force

      - name: Install confcom extension
        shell: pwsh
        run: |
          az extension add --name confcom -y --allow-preview true
          az version

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build ${{ matrix.container }} policy
        run: pwsh ./build/workloads/build-workload-infra-containers-policy.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push -containers ${{ matrix.container }}

  build-azcliext-cleanroom:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-emu"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Login to Azure and refresh token
        uses: ./.github/actions/login-to-azure
        env:
          CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
          TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
          SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

      - name: Log in to Azure Container Registry
        shell: pwsh
        run: az acr login -n ${{ vars.ACR_URL }}

      - name: Build cleanroom az cli extension
        run: pwsh ./build/build-azcliext-cleanroom.ps1 -tag ${{ github.run_id }} -repo ${{ vars.ACR_URL }} -push
