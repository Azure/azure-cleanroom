name: "PR Validation: Multi-party Collab Samples"

on:
  workflow_call:

permissions:
  contents: read  # This is required for actions/checkout
  checks: write   # This is required to generate the test report
  id-token: write # This is required for generating OIDC access token

# When a new revision is pushed to a PR, cancel all in-progress CI runs for that
# PR. See https://docs.github.com/en/actions/using-jobs/using-concurrency
# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

jobs:
  encrypted-storage:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run encrypted storage test
        uses: ./.github/actions/test-multi-party-collab/test-encrypted-storage
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  encrypted-storage-cleanroom-client:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run encrypted storage test
        uses: ./.github/actions/test-multi-party-collab/test-encrypted-storage-cleanroom-client
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  db-access:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run db access
        uses: ./.github/actions/test-multi-party-collab/test-db-access
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  mongo-db-access:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run mongo db access
        uses: ./.github/actions/test-multi-party-collab/test-mongo-db-access
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  quote-of-the-day:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run quote of the day
        uses: ./.github/actions/test-multi-party-collab/test-quote-of-the-day
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  encrypted-storage-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run encrypted storage CACI
        uses: ./.github/actions/test-multi-party-collab/test-encrypted-storage-caci
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  encrypted-storage-cleanroom-client-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: enc-storage-cl-client-caci
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run encrypted storage CACI
        uses: ./.github/actions/test-multi-party-collab/test-encrypted-storage-cleanroom-client-caci
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  ml-training-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    strategy:
      matrix:
        key-store: [mhsm, akvpremium]
      # Prevent Github from cancelling other jobs of the matrix if one of them fails.
      fail-fast: false
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      TDP_HSM_RESOURCE_GROUP: 'azcleanroom-public-pr-rg'
      TDP_MHSM_NAME: 'azcleanroompublichsm'
      TDC_HSM_RESOURCE_GROUP: 'azcleanroom-public-pr-rg'
      TDC_MHSM_NAME: 'azcleanroompublichsm'
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run ml-training test
        uses: ./.github/actions/test-multi-party-collab/test-ml-training-caci
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}
          kvType: ${{ matrix.key-store }}

  nginx-hello:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run nginx hello test
        uses: ./.github/actions/test-multi-party-collab/test-nginx-hello
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  nginx-hello-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run nginx hello test
        uses: ./.github/actions/test-multi-party-collab/test-nginx-hello-caci
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  query-analytics-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run query analytics test
        uses: ./.github/actions/test-multi-party-collab/test-query-analytics
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  big-data-query-analytics:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run query analytics test
        uses: ./.github/actions/test-multi-party-collab/test-big-data-query-analytics
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}

  big-data-query-analytics-caci:
    runs-on: ["self-hosted", "1ES.Pool=azure-cleanroom-public"]
    environment: pr
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      RUN_ID: ${{ github.run_id }}
      JOB_ID: ${{ github.job }}
      RUN_ATTEMPT: ${{ github.run_attempt }}
      USE_PREPROVISIONED_OIDC: "true"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: ./.github/actions/setup-docker-on-data-disk

      - name: Run query analytics test
        uses: ./.github/actions/test-multi-party-collab/test-big-data-query-analytics-caci
        with:
          repo: ${{ vars.ACR_URL }}
          tag: ${{ github.run_id }}
